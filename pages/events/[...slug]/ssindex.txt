import EventList from "../../../components/events/Event-List.component";
import { getAllEvents, getFilteredEvents } from "../../../helpers/utils";
import { useRouter } from "next/router";
import ErrorAlert from "../../../components/error_alert/Error-Alert.component";
const FilteredEvents = ({ filteredEvents, hasError }) => {
  const { isFallback } = useRouter();
  if (isFallback) {
    return <p>Loading...</p>;
  }
  if (hasError) {
    return (
      <ErrorAlert>
        <p>The Event could not be found</p>
      </ErrorAlert>
    );
  }
  return (
    <div>
      <h1 className="text-4xl font-bold">
        Filtered Event <span className="text-gray-300 underline">Result</span>
      </h1>
      <EventList events={filteredEvents} />
    </div>
  );
};

export default FilteredEvents;

export const getServerSideProps = async (context) => {
  const { slug } = context.params;
  const year = +slug[0];
  const month = +slug[1];
  const manipulateEvents = await getAllEvents();
  const filteredEvents = getFilteredEvents(manipulateEvents, { year, month });
  if (filteredEvents.length <= 0) {
    return {
      props: {
        hasError: true,
      },
    };
  }
  return {
    props: {
      filteredEvents,
    },
  };
};
